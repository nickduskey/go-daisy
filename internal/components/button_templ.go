// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.778
package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

type ButtonColor string
type ButtonSize string

const (
	ButtonColorNeutral   ButtonColor = "neutral"
	ButtonColorPrimary   ButtonColor = "primary"
	ButtonColorSecondary ButtonColor = "secondary"
	ButtonColorAccent    ButtonColor = "accent"
	ButtonColorInfo      ButtonColor = "info"
	ButtonColorSuccess   ButtonColor = "success"
	ButtonColorWarning   ButtonColor = "warning"
	ButtonColorError     ButtonColor = "error"

	ButtonSizeLg ButtonSize = "lg"
	ButtonSizeMd ButtonSize = "md"
	ButtonSizeSm ButtonSize = "sm"
	ButtonSizeXs ButtonSize = "xs"
)

type ButtonConfig struct {
	Color       ButtonColor
	Ghost       bool
	Link        bool
	Outline     bool
	Active      bool
	Disabled    bool
	Glass       bool
	NoAnimation bool
	Size        ButtonSize
	Wide        bool
	Block       bool
	Circle      bool
	Square      bool
}

func Button(text string, conf ButtonConfig) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		var templ_7745c5c3_Var2 = []any{
			"btn",
			templ.KV("btn-neutral", conf.Color == ButtonColorNeutral),
			templ.KV("btn-primary", conf.Color == ButtonColorPrimary),
			templ.KV("btn-secondary", conf.Color == ButtonColorSecondary),
			templ.KV("btn-accent", conf.Color == ButtonColorAccent),
			templ.KV("btn-info", conf.Color == ButtonColorInfo),
			templ.KV("btn-success", conf.Color == ButtonColorSuccess),
			templ.KV("btn-warning", conf.Color == ButtonColorWarning),
			templ.KV("btn-error", conf.Color == ButtonColorError),
			templ.KV("btn-ghost", conf.Ghost),
			templ.KV("btn-link", conf.Link),
			templ.KV("btn-outline", conf.Outline),
			templ.KV("btn-active", conf.Active),
			templ.KV("btn-disabled", conf.Disabled),
			templ.KV("glass", conf.Glass),
			templ.KV("no-animation", conf.NoAnimation),
			templ.KV("btn-lg", conf.Size == ButtonSizeLg),
			templ.KV("btn-md", conf.Size == ButtonSizeMd),
			templ.KV("btn-sm", conf.Size == ButtonSizeSm),
			templ.KV("btn-xs", conf.Size == ButtonSizeXs),
			templ.KV("btn-wide", conf.Wide),
			templ.KV("btn-block", conf.Block),
			templ.KV("btn-circle", conf.Circle),
			templ.KV("btn-square", conf.Square),
		}
		templ_7745c5c3_Err = templ.RenderCSSItems(ctx, templ_7745c5c3_Buffer, templ_7745c5c3_Var2...)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<button class=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var3 string
		templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(templ.CSSClasses(templ_7745c5c3_Var2).String())
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/components/button.templ`, Line: 1, Col: 0}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var4 string
		templ_7745c5c3_Var4, templ_7745c5c3_Err = templ.JoinStringErrs(text)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/components/button.templ`, Line: 64, Col: 12}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var4))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</button>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

var _ = templruntime.GeneratedTemplate
